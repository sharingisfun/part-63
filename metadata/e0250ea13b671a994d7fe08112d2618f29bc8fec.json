{"title":"Turing's Vision: The Birth of Computer Science","uid":16024726,"size":1131059,"categoryP":"other","categoryS":"e_books","magnet":"?xt=urn:btih:e0250ea13b671a994d7fe08112d2618f29bc8fec&amp;dn=Turing%27s+Vision%3A+The+Birth+of+Computer+Science&amp;tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&amp;tr=udp%3A%2F%2Fzer0day.ch%3A1337&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":0,"leechers":0,"uploader":"marty14","files":1,"time":1476371616,"description":"Turing's Vision: The Birth of Computer Science - Chris Bernhardt [epub]\r\n\r\nIn 1936, when he was just twenty-four years old, Alan Turing wrote a remarkable paper in which he outlined the theory of computation, laying out the ideas that underlie all modern computers. This groundbreaking and powerful theory now forms the basis of computer science. In Turing's Vision, Chris Bernhardt explains the theory, Turing's most important contribution, for the general reader. Bernhardt argues that the strength of Turing's theory is its simplicity, and that, explained in a straightforward manner, it is eminently understandable by the nonspecialist. As Marvin Minsky writes, &quot;The sheer simplicity of the theory's foundation and extraordinary short path from this foundation to its logical and surprising conclusions give the theory a mathematical beauty that alone guarantees it a permanent place in computer theory.&quot; Bernhardt begins with the foundation and systematically builds to the surprising conclusions. He also views Turing's theory in the context of mathematical history, other views of computation (including those of Alonzo Church), Turing's later work, and the birth of the modern computer.\r\n\r\nIn the paper, &quot;On Computable Numbers, with an Application to the Entscheidungsproblem,&quot; Turing thinks carefully about how humans perform computation, breaking it down into a sequence of steps, and then constructs theoretical machines capable of performing each step. Turing wanted to show that there were problems that were beyond any computer's ability to solve; in particular, he wanted to find a decision problem that he could prove was undecidable. To explain Turing's ideas, Bernhardt examines three well-known decision problems to explore the concept of undecidability; investigates theoretical computing machines, including Turing machines; explains universal machines; and proves that certain problems are undecidable, including Turing's problem concerning computable numbers","torrent":{"xt":"urn:btih:e0250ea13b671a994d7fe08112d2618f29bc8fec","amp;dn":"Turing%27s+Vision%3A+The+Birth+of+Computer+Science","amp;tr":["udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969","udp%3A%2F%2Fzer0day.ch%3A1337","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"e0250ea13b671a994d7fe08112d2618f29bc8fec","infoHashBuffer":{"type":"Buffer","data":[224,37,14,161,59,103,26,153,77,127,224,129,18,210,97,143,41,188,143,236]},"announce":[],"urlList":[]}}